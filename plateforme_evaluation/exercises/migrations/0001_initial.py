# Generated by Django 5.1.7 on 2025-04-13 21:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='nom')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'catégorie',
                'verbose_name_plural': 'catégories',
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(verbose_name='description')),
                ('difficulty_level', models.CharField(choices=[('EASY', 'Facile'), ('MEDIUM', 'Moyen'), ('HARD', 'Difficile')], default='MEDIUM', max_length=10, verbose_name='niveau de difficulté')),
                ('time_limit', models.PositiveIntegerField(help_text='Durée en minutes')),
                ('deadline', models.DateTimeField(blank=True, help_text='Calculée automatiquement à partir de la durée. Modifiable manuellement.', null=True, verbose_name='date limite')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='exercises.category', verbose_name='catégorie')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_exercises', to=settings.AUTH_USER_MODEL, verbose_name='créé par')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises_taught', to=settings.AUTH_USER_MODEL, verbose_name='professeur')),
            ],
            options={
                'verbose_name': 'exercice',
                'verbose_name_plural': 'exercices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='exercise_files/', verbose_name='fichier')),
                ('file_name', models.CharField(max_length=255, verbose_name='nom du fichier')),
                ('file_type', models.CharField(max_length=100, verbose_name='type de fichier')),
                ('is_statement', models.BooleanField(default=False, help_text="Indique si ce fichier est l'énoncé principal", verbose_name="est l'énoncé")),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='téléchargé le')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='exercises.exercise', verbose_name='exercice')),
            ],
            options={
                'verbose_name': "fichier d'exercice",
                'verbose_name_plural': "fichiers d'exercice",
            },
        ),
        migrations.CreateModel(
            name='ExerciseGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_date', models.DateTimeField(verbose_name='date de début')),
                ('end_date', models.DateTimeField(verbose_name='date de fin')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('exercises', models.ManyToManyField(related_name='groups', to='exercises.exercise', verbose_name='exercices')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to=settings.AUTH_USER_MODEL, verbose_name='professeur')),
            ],
            options={
                'verbose_name': "groupe d'exercices",
                'verbose_name_plural': "groupes d'exercices",
            },
        ),
        migrations.CreateModel(
            name='ExerciseStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_grade', models.FloatField()),
                ('submission_count', models.PositiveIntegerField()),
                ('completion_rate', models.FloatField()),
                ('common_errors', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='exercises.exercise')),
            ],
            options={
                'verbose_name': 'statistique exercice',
                'verbose_name_plural': 'statistiques exercices',
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Donnez un nom explicite à ce modèle de correction', max_length=200, verbose_name='titre du modèle')),
                ('solution_type', models.CharField(choices=[('STANDARD', 'Standard'), ('ALTERNATIVE', 'Alternative'), ('SIMPLIFIED', 'Simplifiée'), ('DETAILED', 'Détaillée')], default='STANDARD', max_length=20, verbose_name='type de solution')),
                ('description', models.TextField(verbose_name='description')),
                ('file', models.FileField(blank=True, null=True, upload_to='solutions/', verbose_name='fichier')),
                ('is_default', models.BooleanField(default=False, help_text='Utiliser ce modèle comme correction de référence', verbose_name='modèle par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solutions', to='exercises.exercise', verbose_name='exercice')),
            ],
            options={
                'verbose_name': 'solution',
                'verbose_name_plural': 'solutions',
                'ordering': ['-is_default', 'solution_type'],
            },
        ),
    ]
