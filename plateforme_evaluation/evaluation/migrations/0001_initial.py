# Generated by Django 5.1.7 on 2025-04-13 21:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('submissions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('PROCESSING', 'En cours de traitement'), ('COMPLETED', 'Complétée'), ('FAILED', 'Échouée')], default='PENDING', max_length=20, verbose_name='statut')),
                ('ai_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='note IA')),
                ('final_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='note finale')),
                ('ai_feedback', models.TextField(blank=True, verbose_name='retour IA')),
                ('professor_feedback', models.TextField(blank=True, verbose_name='retour professeur')),
                ('evaluated_at', models.DateTimeField(auto_now_add=True, verbose_name='évalué le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('is_reviewed_by_professor', models.BooleanField(default=False, verbose_name='revu par le professeur')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='submissions.submission', verbose_name='soumission')),
            ],
            options={
                'verbose_name': 'évaluation',
                'verbose_name_plural': 'évaluations',
            },
        ),
        migrations.CreateModel(
            name='FeedbackItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('POSITIVE', 'Positif'), ('NEGATIVE', 'Négatif'), ('SUGGESTION', 'Suggestion')], max_length=20, verbose_name='type')),
                ('content', models.TextField(verbose_name='contenu')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ordre')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_items', to='evaluation.evaluation', verbose_name='évaluation')),
            ],
            options={
                'verbose_name': 'élément de retour',
                'verbose_name_plural': 'éléments de retour',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='note moyenne')),
                ('total_submissions', models.PositiveIntegerField(default=0, verbose_name='total des soumissions')),
                ('strengths', models.TextField(blank=True, verbose_name='points forts')),
                ('weaknesses', models.TextField(blank=True, verbose_name='points faibles')),
                ('improvement_suggestions', models.TextField(blank=True, verbose_name="suggestions d'amélioration")),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='dernière mise à jour')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_analytics', to=settings.AUTH_USER_MODEL, verbose_name='étudiant')),
            ],
            options={
                'verbose_name': 'analyse de performance',
                'verbose_name_plural': 'analyses de performances',
            },
        ),
    ]
